{"version":3,"sources":["api.ts","atoms.ts","components/BackButton.tsx","components/ToggleButton.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","components/Categories.tsx","components/CreateToDo.tsx","components/ToDo.tsx","routes/ToDoList.tsx","components/Header.tsx","utils.ts","routes/Home.tsx","routes/Search.tsx","routes/Tv.tsx","routes/NetflixHome.tsx","Router.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","API_KEY","BASE_PATH","getLatestMovies","getTopRatedMovies","getUpcomingMovies","getLatestShows","getAiringShows","getPopularShows","getTopRatedShows","getMovieDetail","movieId","getTvDetail","tvId","Categories","BackButton","history","useHistory","leftIcon","onClick","goBack","style","position","left","top","ToggleButton","useColorMode","colorMode","toggleColorMode","rightIcon","right","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","open","toFixed","high","low","close","x","time_open","y","options","theme","mode","chart","height","width","background","grid","show","yaxis","tooltip","enabled","labels","colors","xaxis","datetimeFormatter","year","month","day","hour","dataLabels","formatter","value","Item","styled","div","Price","useParams","tickersData","fontSize","padding","quotes","USD","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","volume_24h","volume_24h_change_24h","Title","h1","Loader","span","Container","Header","header","Wrapper","Overview","OverviewItem","Description","p","Tabs","Tab","props","isActive","accentColor","textColor","Coin","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","loading","Helmet","rank","symbol","description","total_supply","max_supply","to","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","localStorageToDos","localStorage","getItem","parsedToDos","JSON","parse","localStorageCategories","parsedCategories","toDoState","atom","key","default","categoryState","TO_DO","categoriesState","DOING","DONE","toDoSelector","selector","get","toDos","category","filter","toDo","FormContainer","form","useRecoilState","setCategory","categories","setCategories","useForm","register","handleSubmit","setValue","onInput","event","currentTarget","c","random","onSubmit","find","window","alert","oldCategories","newCategories","setItem","stringify","required","placeholder","colorScheme","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","oldToDos","newToDos","text","ToDoWrapper","ToDoButton","Button","ToDo","targetIndex","findIndex","newToDo","newToDoArr","color","ToDoContainer","ToDoList","Nav","motion","nav","Col","Logo","svg","Items","Search","Circle","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","backgroundColor","scroll","useState","searchOpen","setSearchOpen","homeMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","start","variants","animate","initial","whileHover","xmlns","viewBox","d","isExact","layoutId","keyword","push","scaleX","prev","fill","cursor","fillRule","clipRule","minLength","makeImagePath","format","Banner","bgPhoto","h2","Slider","Row","Box","Info","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","SlideWrapper","TitleWrapper","rowVariants","hidden","outerWidth","visible","exit","boxVariants","scale","hover","zIndex","delay","duaration","infoVariants","opacity","Home","bigMovieMatch","latest","latestLoading","topRated","topRatedLoading","upcoming","upcomingLoading","index","setIndex","leaving","setLeaving","toggleLeaving","onBoxClicked","results","clickedMovie","params","movie","movieDetail","detailLoading","increaseIndex","target","totalMovies","length","maxIndex","prevIndex","backdrop_path","title","overview","size","AnimatePresence","onExitComplete","duration","backgroundImage","runtime","popularity","href","homepage","rel","SearchTitle","location","URLSearchParams","search","movies","moviesLoading","tvs","tvsLoading","setType","console","log","tv","number_of_episodes","Tv","airing","airingLoading","popular","popularLoading","tvDetail","NetflixWrapper","NetflixHome","exact","Router","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","createBreakpoints","sm","md","lg","xl","extendTheme","fonts","heading","defaultTheme","body","styles","global","lineHeight","a","whiteSpace","borderRadius","_hover","boxShadow","_focus","textDecoration","outline","border","listStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.a17774af.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`,\n  ).then((response) => response.json());\n}\n\nexport interface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  name: string;\n  overview: string;\n  runtime: string;\n  popularity: number;\n  homepage: string;\n  number_of_episodes: number;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nconst API_KEY = \"10923b261ba94d897ac6b81148314a3f\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\nexport function getLatestMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getTopRatedMovies() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getUpcomingMovies() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getLatestShows() {\n  return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getAiringShows() {\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getPopularShows() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function getTopRatedShows() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getMovieDetail(movieId: string) {\n  return fetch(`${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}`).then(\n    (response) => response.json(),\n  );\n}\n\nexport function getTvDetail(tvId: string) {\n  return fetch(`${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function searchMovies(movieId: string) {\n  return fetch(\n    `${BASE_PATH}/search/movie/?api_key=${API_KEY}&query=${movieId}`,\n  ).then((response) => response.json());\n}\n\nexport function searchTvs(tvId: string) {\n  return fetch(`${BASE_PATH}/search/tv/?api_key=${API_KEY}&query=${tvId}`).then(\n    (response) => response.json(),\n  );\n}\n","import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\nconst localStorageToDos = localStorage.getItem(\"ToDos\");\nconst parsedToDos = JSON.parse(localStorageToDos as any);\n\nconst localStorageCategories = localStorage.getItem(\"Categories\");\nconst parsedCategories = JSON.parse(localStorageCategories as any);\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: parsedToDos ?? [],\n});\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const categoriesState = atom<string[]>({\n  key: \"categories\",\n  default: parsedCategories ?? [\n    Categories.TO_DO,\n    Categories.DOING,\n    Categories.DONE,\n  ],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { useHistory } from \"react-router\";\n\nconst BackButton = function () {\n  const history = useHistory();\n\n  return (\n    <Button\n      leftIcon={<IoMdArrowRoundBack />}\n      onClick={() => history.goBack()}\n      style={{ position: \"absolute\", left: \"0\", top: \"0\" }}\n    >\n      Back\n    </Button>\n  );\n};\n\nexport default BackButton;\n","import { Button, useColorMode } from \"@chakra-ui/react\";\nimport { FaRegMoon, FaRegSun } from \"react-icons/fa\";\n\nconst ToggleButton = function () {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Button\n      rightIcon={colorMode === \"light\" ? <FaRegMoon /> : <FaRegSun />}\n      onClick={toggleColorMode}\n      style={{ position: \"absolute\", right: \"0\", top: \"0\" }}\n    >\n      {colorMode === \"light\" ? \"Dark\" : \"Light\"} Mode\n    </Button>\n  );\n};\n\nexport default ToggleButton;\n","import { useColorMode } from \"@chakra-ui/color-mode\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nconst Chart = function ({ coinId }: ChartProps) {\n  const { colorMode } = useColorMode();\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    },\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ReactApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => {\n                const open = price.open.toFixed(2);\n                const high = price.high.toFixed(2);\n                const low = price.low.toFixed(2);\n                const close = price.close.toFixed(2);\n                return {\n                  x: new Date(price.time_open),\n                  y: [open, high, low, close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              background: \"transparent\",\n            },\n            grid: {\n              show: false,\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n              labels: {\n                style: {\n                  colors: colorMode === \"dark\" ? \"#fff\" : \"#000\",\n                },\n              },\n            },\n            xaxis: {\n              type: \"datetime\",\n              labels: {\n                datetimeFormatter: {\n                  year: \"yyyy\",\n                  month: \"MMM 'yy\",\n                  day: \"dd MMM\",\n                  hour: \"HH:mm\",\n                },\n                style: {\n                  colors: colorMode === \"dark\" ? \"#fff\" : \"#000\",\n                },\n              },\n            },\n            dataLabels: {\n              formatter: (value: number) => `$${value.toFixed(2)}`,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import { Text } from \"@chakra-ui/layout\";\nimport { fetchCoinTickers } from \"api\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst Item = styled.div`\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 15px;\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 12px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Price = function () {\n  const { coinId } = useParams<RouteParams>();\n  const { isLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <>\n          <Text fontSize=\"4xl\" style={{ padding: \"30px\" }}>\n            Price\n          </Text>\n          <Item>\n            <span>price</span>\n            <span>$ {tickersData?.quotes.USD.price.toFixed(2)}</span>\n          </Item>\n          <Text fontSize=\"4xl\" style={{ padding: \"30px\" }}>\n            Price Change\n          </Text>\n          <Item>\n            <span>15 min</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_15m.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>30 min</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_30m.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>1 hour</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_1h.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>6 hour</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_6h.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>12 hour</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_12h.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>24 hour</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_24h.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>7 day</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_7d.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>30 day</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_30d.toFixed(2)} %\n            </span>\n          </Item>\n          <Item>\n            <span>1 year</span>\n            <span>\n              {tickersData?.quotes.USD.percent_change_1y.toFixed(2)} %\n            </span>\n          </Item>\n          <Text fontSize=\"4xl\" style={{ padding: \"30px\" }}>\n            Volumn\n          </Text>\n          <Item>\n            <span>24 hour</span>\n            <span>{tickersData?.quotes.USD.volume_24h.toFixed(0)}</span>\n          </Item>\n          <Item>\n            <span>24 hour change</span>\n            <span>\n              {tickersData?.quotes.USD.volume_24h_change_24h.toFixed(2)} %\n            </span>\n          </Item>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Price;\n","import { fetchCoinInfo, fetchCoinTickers } from \"api\";\nimport BackButton from \"components/BackButton\";\nimport ToggleButton from \"components/ToggleButton\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n  font-size: 48px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  margin: 30px;\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`;\n\nconst Wrapper = styled.div`\n  min-width: 1000px;\n  margin: 30px auto;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst Coin = function () {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/coin/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/coin/:coinId/chart\");\n  // Object.keys(info).join()\n  // Object.values(info).map(v => typeof v).join() 타입스크립트 타입 추출\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId),\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    },\n  );\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <BackButton />\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <ToggleButton />\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <Wrapper>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/coin/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/coin/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path=\"/coin/:coinId/price\">\n              <Price />\n            </Route>\n            <Route path=\"/coin/:coinId/chart\">\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default Coin;\n","import { fetchCoins } from \"api\";\nimport ToggleButton from \"components/ToggleButton\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 30px;\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst CoinsList = styled.ul`\n  display: grid;\n  grid-template-columns: auto auto auto auto auto;\n  grid-template-columns: auto auto auto auto auto;\n  grid-gap: 30px;\n  margin: 30px;\n`;\n\nconst Coin = styled.li`\n  background-color: white;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  font-size: 1.2rem;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    color: #333;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n  font-size: 48px;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  isNew: boolean;\n  isActive: boolean;\n  type: string;\n}\n\nconst Coins = function () {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coin Pan 💸</title>\n      </Helmet>\n      <Header>\n        <Title>Coin Pan 💸</Title>\n        <ToggleButton />\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/coin/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n};\nexport default Coins;\n","import { Button } from \"@chakra-ui/button\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Select } from \"@chakra-ui/select\";\nimport { FormLabel } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { categoriesState, categoryState } from \"../atoms\";\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  & button {\n    margin-left: 10px;\n  }\n`;\n\ninterface IForm {\n  category: string;\n}\n\nconst Categories = function () {\n  const [category, setCategory] = useRecoilState(categoryState);\n  const [categories, setCategories] = useRecoilState(categoriesState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const handleValid = ({ category }: IForm) => {\n    const isDuplicated = categories.find((name) => name === category);\n    if (isDuplicated) {\n      window.alert(\"You already have that category name ! \");\n      return;\n    }\n\n    setCategories((oldCategories) => {\n      const newCategories = [category, ...oldCategories];\n      localStorage.setItem(\"Categories\", JSON.stringify(newCategories));\n      return newCategories;\n    });\n    setValue(\"category\", \"\");\n  };\n\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n\n  return (\n    <>\n      <Select value={category} onInput={onInput}>\n        {categories.map((c) => (\n          <option key={Math.random()} value={c}>\n            {c}\n          </option>\n        ))}\n      </Select>\n      <FormContainer onSubmit={handleSubmit(handleValid)}>\n        <FormLabel width=\"200px\">Create Category</FormLabel>\n        <Input\n          {...register(\"category\", {\n            required: \"Please write a category\",\n          })}\n          placeholder=\"Write a category\"\n        />\n        <Button type=\"submit\" colorScheme=\"teal\">\n          Add\n        </Button>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default Categories;\n","import { Button } from \"@chakra-ui/button\";\nimport { Input } from \"@chakra-ui/input\";\nimport { FormLabel } from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  & button {\n    margin-left: 10px;\n  }\n`;\n\ninterface IForm {\n  toDo: string;\n}\n\nconst CreateToDo = function () {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => {\n      const newToDos = [{ text: toDo, id: Date.now(), category }, ...oldToDos];\n\n      localStorage.setItem(\"ToDos\", JSON.stringify(newToDos));\n\n      return newToDos;\n    });\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <FormContainer onSubmit={handleSubmit(handleValid)}>\n      <FormLabel width=\"200px\">Create To Do</FormLabel>\n      <Input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <Button type=\"submit\" colorScheme=\"teal\">\n        Add\n      </Button>\n    </FormContainer>\n  );\n};\n\nexport default CreateToDo;\n","import { Button } from \"@chakra-ui/button\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, categoriesState, IToDo, toDoState } from \"../atoms\";\n\nconst ToDoWrapper = styled.li`\n  background: rgba(0, 0, 0, 0.2);\n  padding: 20px 40px;\n  border-radius: 4px;\n`;\n\nconst ToDoButton = styled(Button)`\n  margin-left: 10px;\n`;\n\nconst ToDo = function ({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const categories = useRecoilValue(categoriesState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      const newToDoArr = [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n\n      localStorage.setItem(\"ToDos\", JSON.stringify(newToDoArr));\n\n      return newToDoArr;\n    });\n  };\n\n  return (\n    <ToDoWrapper>\n      <span>{text}</span>\n      {categories.map((c) => {\n        if (c !== category) {\n          return (\n            <ToDoButton\n              key={Math.random()}\n              color=\"teal\"\n              name={c}\n              onClick={onClick}\n            >\n              {c}\n            </ToDoButton>\n          );\n        }\n        return null;\n      })}\n    </ToDoWrapper>\n  );\n};\n\nexport default ToDo;\n","import { useRecoilValue } from \"recoil\";\nimport { toDoSelector } from \"atoms\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\n\nimport Categories from \"components/Categories\";\nimport CreateToDo from \"components/CreateToDo\";\nimport ToDo from \"components/ToDo\";\nimport BackButton from \"components/BackButton\";\nimport ToggleButton from \"components/ToggleButton\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  margin: 30px;\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  height: 100px;\n  position: relative;\n`;\n\nconst Wrapper = styled.div`\n  min-width: 1000px;\n  margin: 30px auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n`;\n\nconst ToDoContainer = styled.ul`\n  margin: 20px;\n  & li {\n    margin: 10px;\n  }s\n`;\n\nconst ToDoList = function () {\n  const toDos = useRecoilValue(toDoSelector);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>To Do List 📚</title>\n      </Helmet>\n      <Header>\n        <BackButton />\n        <Title>To Do List 📚</Title>\n        <ToggleButton />\n      </Header>\n      <Wrapper>\n        <Categories />\n        <CreateToDo />\n        <ToDoContainer>\n          {toDos?.map((toDo) => (\n            <ToDo key={toDo.id} {...toDo} />\n          ))}\n        </ToDoContainer>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default ToDoList;\n","import { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  background-color: black;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 140px;\n  height: 50px;\n  fill: red;\n  path {\n    stroke-width: 10px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: white;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  transition: color 0.3s ease-in-out;\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: red;\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  left: -150px;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid white;\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nconst Header = function () {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/netflix\");\n  const tvMatch = useRouteMatch(\"/netflix/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    localStorage.setItem(\"search\", data.keyword);\n    history.push(`/netflix/search?keyword=${data.keyword}`);\n  };\n\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial=\"top\">\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={100}\n          height={50}\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/netflix\">\n              Movies 🍿 {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/netflix/tv\">\n              Tv Shows 📺 {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            style={{ cursor: \"pointer\" }}\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            />\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n};\n\nexport default Header;\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ?? \"original\"}/${id}`;\n}\n","import { Button } from \"@chakra-ui/button\";\nimport { Text } from \"@chakra-ui/layout\";\nimport {\n  getLatestMovies,\n  getMovieDetail,\n  getTopRatedMovies,\n  getUpcomingMovies,\n  IGetMoviesResult,\n  IMovie,\n} from \"api\";\nimport { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport { makeImagePath } from \"utils\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  position: relative;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: black;\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 80vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow-y: scroll;\n  background-color: black;\n  z-index: 2;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: white;\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: white;\n`;\n\nconst SlideWrapper = styled.div`\n  height: 300px;\n  margin: 30px 0;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    zIndex: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nconst Home = function () {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\n    \"/netflix/movie/:movieId\",\n  );\n  const { scrollY } = useViewportScroll();\n\n  const { data: latest, isLoading: latestLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"latest\"],\n    getLatestMovies,\n  );\n\n  const { data: topRated, isLoading: topRatedLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"topRated\"], getTopRatedMovies);\n\n  const { data: upcoming, isLoading: upcomingLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"upcoming\"], getUpcomingMovies);\n\n  const [index, setIndex] = useState<{\n    [prop: string]: any;\n    latest: number;\n    topRated: number;\n    upcoming: number;\n  }>({\n    latest: 0,\n    topRated: 0,\n    upcoming: 0,\n  });\n  const [leaving, setLeaving] = useState(false);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/netflix/movie/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/netflix\");\n  const data: any = [\n    ...(latest?.results || []),\n    ...(topRated?.results || []),\n    ...(upcoming?.results || []),\n  ];\n\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    data?.find(\n      (movie: { id: number }) => movie.id === +bigMovieMatch.params.movieId,\n    );\n\n  const { data: movieDetail, isLoading: detailLoading } = useQuery<IMovie>(\n    [\"movies\", \"detail\"],\n    () => getMovieDetail(bigMovieMatch?.params.movieId || \"\"),\n  );\n\n  const increaseIndex = (type: string) => {\n    if (leaving) return;\n    const target = (type === \"latest\"\n      ? latest\n      : type === \"topRated\"\n      ? topRated\n      : upcoming) || { results: [] };\n\n    toggleLeaving();\n    const totalMovies = target.results.length - 1;\n    const maxIndex = Math.floor(totalMovies / offset) - 1;\n\n    setIndex((prev) => {\n      const prevIndex = prev[type];\n\n      return {\n        ...prev,\n        [type]: prevIndex === maxIndex ? 0 : prevIndex + 1,\n      };\n    });\n  };\n\n  const isLoading =\n    latestLoading || topRatedLoading || upcomingLoading || detailLoading;\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(latest?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{latest?.results[0].title}</Title>\n            <Overview>{latest?.results[0].overview}</Overview>\n          </Banner>\n          {latest && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Latest Movies 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"latest\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.latest}\n                  >\n                    {latest?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.latest,\n                        offset * index.latest + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}latest`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.title}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {topRated && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Top Rated Movies 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"topRated\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.topRated}\n                  >\n                    {topRated?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.topRated,\n                        offset * index.topRated + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}topRated`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.title}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {upcoming && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Upcoming Movies 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"upcoming\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.upcoming}\n                  >\n                    {upcoming?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.upcoming,\n                        offset * index.upcoming + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}upcoming`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.title}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\",\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>\n                        Runtime 🍿: {movieDetail?.runtime}\n                      </BigOverview>\n                      <BigOverview>\n                        Popularity 💯: {movieDetail?.popularity}\n                      </BigOverview>\n                      <BigOverview>\n                        Website 🌏:{\" \"}\n                        <a\n                          href={movieDetail?.homepage}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {movieDetail?.homepage}\n                        </a>\n                      </BigOverview>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\nexport default Home;\n","import { Button } from \"@chakra-ui/button\";\nimport { Text } from \"@chakra-ui/layout\";\nimport {\n  getMovieDetail,\n  getTvDetail,\n  IGetMoviesResult,\n  IMovie,\n  searchMovies,\n  searchTvs,\n} from \"api\";\nimport { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport { makeImagePath } from \"utils\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  position: relative;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: black;\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 80vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow-y: scroll;\n  background-color: black;\n  z-index: 2;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: white;\n  padding: 20px;\n  font-size: 46px;\n  top: -80px;\n  position: relative;\n`;\n\nconst SearchTitle = styled.h3`\n  color: white;\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  text-align: center;\n  margin: 200px;\n  // top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: white;\n`;\n\nconst SlideWrapper = styled.div`\n  height: 300px;\n  margin: 30px 0;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    zIndex: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nconst Search = function () {\n  const location = useLocation();\n  const keyword =\n    new URLSearchParams(location.search).get(\"keyword\") ||\n    localStorage.getItem(\"search\");\n\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ id: string }>(\"/netflix/search/:id\");\n  const { scrollY } = useViewportScroll();\n\n  const { data: movies, isLoading: moviesLoading } = useQuery<IGetMoviesResult>(\n    [\"search\", \"movies\"],\n    () => searchMovies(keyword || \"\"),\n  );\n\n  const { data: tvs, isLoading: tvsLoading } = useQuery<IGetMoviesResult>(\n    [\"search\", \"tvs\"],\n    () => searchTvs(keyword || \"\"),\n  );\n  const [index, setIndex] = useState<{\n    [prop: string]: any;\n    movies: number;\n    tvs: number;\n  }>({\n    movies: 0,\n    tvs: 0,\n  });\n  const [leaving, setLeaving] = useState(false);\n  const [type, setType] = useState(\"movies\");\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  console.log(keyword);\n  const onOverlayClick = () =>\n    history.push(`/netflix/search?keyword=${keyword}`);\n\n  const onBoxClicked = (id: number, type: string) => {\n    setType(type);\n    history.push(`/netflix/search/${id}`);\n  };\n  const data: any = [...(movies?.results || []), ...(tvs?.results || [])];\n\n  const clickedMovie =\n    bigMovieMatch?.params.id &&\n    data?.find((tv: { id: number }) => tv.id === +bigMovieMatch.params.id);\n\n  const { data: detail, isLoading: detailLoading } = useQuery<IMovie>(\n    [\"search\", \"detail\"],\n    () =>\n      type === \"movies\"\n        ? getMovieDetail(bigMovieMatch?.params.id || \"\")\n        : getTvDetail(bigMovieMatch?.params.id || \"\"),\n  );\n\n  const increaseIndex = (type: string) => {\n    if (leaving) return;\n    const target = (type === \"movies\" ? movies : tvs) || { results: [] };\n\n    toggleLeaving();\n    const totalMovies = target.results.length - 1;\n    const maxIndex = Math.floor(totalMovies / offset) - 1;\n\n    setIndex((prev) => {\n      const prevIndex = prev[type];\n\n      return {\n        ...prev,\n        [type]: prevIndex === maxIndex ? 0 : prevIndex + 1,\n      };\n    });\n  };\n\n  const isLoading = moviesLoading || tvsLoading || detailLoading;\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <SearchTitle>Keyword : {keyword}</SearchTitle>\n          {movies && movies?.results && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Movies 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"movies\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.movies}\n                  >\n                    {movies?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.movies,\n                        offset * index.movies + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}movies`}\n                          onClick={() => onBoxClicked(movie.id, \"movies\")}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.title}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {tvs && tvs.results && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">TV Shows 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"tvs\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.tvs}\n                  >\n                    {tvs?.results\n                      .slice(1)\n                      .slice(offset * index.tvs, offset * index.tvs + offset)\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}tvs`}\n                          onClick={() => onBoxClicked(movie.id, \"tvs\")}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.id}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\",\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>\n                        {clickedMovie?.name || clickedMovie?.title}\n                      </BigTitle>\n                      <BigOverview>\n                        Episodes 🍿: {clickedMovie?.number_of_episodes}\n                      </BigOverview>\n                      <BigOverview>\n                        Popularity 💯: {clickedMovie?.popularity}\n                      </BigOverview>\n                      <BigOverview>\n                        Website 🌏:{\" \"}\n                        <a\n                          href={clickedMovie?.homepage}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {clickedMovie?.homepage}\n                        </a>\n                      </BigOverview>\n                      <BigOverview>{clickedMovie?.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\nexport default Search;\n","import { Button } from \"@chakra-ui/button\";\nimport { Text } from \"@chakra-ui/layout\";\nimport {\n  getAiringShows,\n  getLatestShows,\n  getPopularShows,\n  getTopRatedShows,\n  getTvDetail,\n  IGetMoviesResult,\n  IMovie,\n} from \"api\";\nimport { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport { makeImagePath } from \"utils\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  position: relative;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: black;\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 80vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow-y: scroll;\n  background-color: black;\n  z-index: 2;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: white;\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: white;\n`;\n\nconst SlideWrapper = styled.div`\n  height: 300px;\n  margin: 30px 0;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    zIndex: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nconst Tv = function () {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ tvId: string }>(\"/netflix/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n\n  const { data: latest, isLoading: latestLoading } = useQuery<IGetMoviesResult>(\n    [\"tv\", \"latest\"],\n    getLatestShows,\n  );\n\n  const { data: airing, isLoading: airingLoading } = useQuery<IGetMoviesResult>(\n    [\"tv\", \"airing\"],\n    getAiringShows,\n  );\n\n  const { data: popular, isLoading: popularLoading } =\n    useQuery<IGetMoviesResult>([\"tv\", \"popular\"], getPopularShows);\n\n  const { data: topRated, isLoading: topRatedLoading } =\n    useQuery<IGetMoviesResult>([\"tv\", \"topRated\"], getTopRatedShows);\n\n  const [index, setIndex] = useState<{\n    [prop: string]: any;\n    latest: number;\n    topRated: number;\n    airing: number;\n    popular: number;\n  }>({\n    latest: 0,\n    topRated: 0,\n    airing: 0,\n    popular: 0,\n  });\n  const [leaving, setLeaving] = useState(false);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/netflix/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/netflix/tv\");\n  const data: any = [\n    ...(latest?.results || []),\n    ...(topRated?.results || []),\n    ...(airing?.results || []),\n    ...(popular?.results || []),\n  ];\n\n  const clickedMovie =\n    bigMovieMatch?.params.tvId &&\n    data?.find((tv: { id: number }) => tv.id === +bigMovieMatch.params.tvId);\n\n  const { data: tvDetail, isLoading: detailLoading } = useQuery<IMovie>(\n    [\"tv\", \"detail\"],\n    () => getTvDetail(bigMovieMatch?.params.tvId || \"\"),\n  );\n\n  const increaseIndex = (type: string) => {\n    if (leaving) return;\n    const target = (type === \"latest\"\n      ? latest\n      : type === \"topRated\"\n      ? topRated\n      : type === \"airing\"\n      ? airing\n      : popular) || { results: [] };\n\n    toggleLeaving();\n    const totalMovies = target.results.length - 1;\n    const maxIndex = Math.floor(totalMovies / offset) - 1;\n\n    setIndex((prev) => {\n      const prevIndex = prev[type];\n\n      return {\n        ...prev,\n        [type]: prevIndex === maxIndex ? 0 : prevIndex + 1,\n      };\n    });\n  };\n\n  const isLoading =\n    latestLoading ||\n    topRatedLoading ||\n    airingLoading ||\n    popularLoading ||\n    detailLoading;\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(latest?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{latest?.results[0].name}</Title>\n            <Overview>{latest?.results[0].overview}</Overview>\n          </Banner>\n          {latest && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Latest Shows 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"latest\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.latest}\n                  >\n                    {latest?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.latest,\n                        offset * index.latest + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}latest`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {topRated && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Top Rated Shows 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"topRated\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.topRated}\n                  >\n                    {topRated?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.topRated,\n                        offset * index.topRated + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}topRated`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {airing && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">TV Airing Today 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"airing\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.airing}\n                  >\n                    {airing?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.airing,\n                        offset * index.airing + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}airing`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          {popular && (\n            <SlideWrapper>\n              <TitleWrapper>\n                <Text fontSize=\"5xl\">Popular Shows 🎬</Text>\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={() => increaseIndex(\"popular\")}\n                >\n                  Next\n                </Button>\n              </TitleWrapper>\n              <Slider>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index.popular}\n                  >\n                    {popular?.results\n                      .slice(1)\n                      .slice(\n                        offset * index.popular,\n                        offset * index.popular + offset,\n                      )\n                      .map((movie) => (\n                        <Box\n                          layoutId={`${movie.id}popular`}\n                          onClick={() => onBoxClicked(movie.id)}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n              </Slider>\n            </SlideWrapper>\n          )}\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.tvId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\",\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.name}</BigTitle>\n                      <BigOverview>\n                        Episodes 🍿: {tvDetail?.number_of_episodes}\n                      </BigOverview>\n                      <BigOverview>\n                        Popularity 💯: {tvDetail?.popularity}\n                      </BigOverview>\n                      <BigOverview>\n                        Website 🌏:{\" \"}\n                        <a\n                          href={tvDetail?.homepage}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {tvDetail?.homepage}\n                        </a>\n                      </BigOverview>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\nexport default Tv;\n","import Header from \"components/Header\";\nimport { Route, Switch } from \"react-router\";\nimport styled from \"styled-components\";\nimport Home from \"./Home\";\nimport Search from \"./Search\";\nimport Tv from \"./Tv\";\n\nconst NetflixWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  color: white;\n  text-align: left;\n  a {\n    color: red;\n    font-size: 14pt;\n    font-weight: bold;\n    &:hover {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst NetflixHome = function () {\n  return (\n    <NetflixWrapper>\n      <Header />\n      <Switch>\n        <Route exact path={[\"/netflix\", \"/netflix/movie/:movieId\"]}>\n          <Home />\n        </Route>\n        <Route exact path={[\"/netflix/tv\", \"/netflix/tv/:tvId\"]}>\n          <Tv />\n        </Route>\n        <Route exact path={[\"/netflix/search\", \"/netflix/search/:id\"]}>\n          <Search />\n        </Route>\n      </Switch>\n    </NetflixWrapper>\n  );\n};\n\nexport default NetflixHome;\n","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Test from \"routes/Test\";\nimport Coin from \"routes/Coin\";\nimport Coins from \"routes/Coins\";\nimport ToDoList from \"routes/ToDoList\";\nimport NetflixHome from \"routes/NetflixHome\";\n\nconst Router = function () {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Coins />\n        </Route>\n        <Route path=\"/netflix\">\n          <NetflixHome />\n        </Route>\n        <Route exact path=\"/todo\">\n          <ToDoList />\n        </Route>\n        <Route path=\"/coin/:coinId\">\n          <Coin />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\nexport default Router;\n","import styled from \"styled-components\";\nimport Router from \"Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  min-height: 100vh;\n  text-align: center;\n  margin: 0;\n`;\n\nconst App = function () {\n  return (\n    <Wrapper>\n      <Router />\n      <ReactQueryDevtools initialIsOpen />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { theme as defaultTheme, extendTheme } from \"@chakra-ui/react\";\n\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\n\nconst breakpoints = createBreakpoints({\n  sm: \"425px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1280px\",\n  \"2xl\": \"1440px\",\n});\n\nconst theme = extendTheme({\n  fonts: {\n    heading: `'Inter', ${defaultTheme.fonts.heading}`,\n    body: `'Inter', ${defaultTheme.fonts.body}`,\n  },\n  breakpoints,\n  styles: {\n    global: (props: { colorMode: string }) => ({\n      \"html, body\": {\n        fontSize: \"sm\",\n        backgroundColor: props.colorMode === \"dark\" ? \"gray.800\" : \"gray.100\",\n        color: props.colorMode === \"dark\" ? \"white\" : \"black.600\",\n        lineHeight: \"tall\",\n      },\n      a: {\n        color: props.colorMode === \"dark\" ? \"white\" : \"black.600\",\n        whiteSpace: \"pre\",\n        borderRadius: \"inherit\",\n        _hover: {\n          color: \"teal.500\",\n          boxShadow: \"0px 0px 30px 10px rgb(49, 151, 149, 0.7)\",\n        },\n        _focus: {\n          textDecoration: \"none\",\n          outline: \"none\",\n          border: 0,\n          boxShadow: \"none !important\",\n        },\n      },\n      li: {\n        listStyle: \"none\",\n      },\n    }),\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <ChakraProvider resetCSS theme={theme}>\n          <App />\n        </ChakraProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}