{"version":3,"sources":["components/Circle.tsx","routes/Test.tsx","api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx","theme.ts"],"names":["Container","styled","div","props","bgColor","Circle","bdColor","animation","keyframes","Btn","button","Emoji","span","Box","Input","input","attrs","required","Title","theme","textColor","Test","useState","value","setValue","as","href","onSubmit","event","preventDefault","console","log","type","placeholder","onChange","currentTarget","BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","series","name","map","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","toFixed","Price","h1","accentColor","Loader","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","Wrapper","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","btnColor","document","getElementById"],"mappings":"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","file":"static/js/main.a9d4dfcf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface CircleProps {\n  bgColor: string;\n  bdColor?: string;\n}\nconst Container = styled.div<CircleProps>`\n  background-color: ${(props) => props.bgColor};\n`;\n\nconst Circle = function ({ bgColor, bdColor }: CircleProps) {\n  return <Container bgColor={bgColor} bdColor={bdColor ?? bgColor} />;\n};\n\nexport default Circle;\n","import { useState } from \"react\";\nimport Circle from \"components/Circle\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst animation = keyframes`\n0% {\n  transform: rotate(0deg);\n  border-radius: 0;\n}\n50% {\n  transform: rotate(360deg);\n  border-radius: 100px;\n}\n100% {\n  transform: rotate(0deg);\n  border-radius: 0;\n}\n`;\n\nconst Btn = styled.button`\n  color: white;\n  background-color: #4caf50; /* Green */\n  border: 0;\n  border-radius: 0.25rem;\n`;\n\nconst Emoji = styled.span`\n  font-size: 30px;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 300px;\n  background-color: skyblue;\n  animation: ${animation} 1s linear infinite;\n  ${Emoji} {\n    &:hover {\n      font-size: 50px;\n      &:active {\n        opacity: 0;\n      }\n    }\n  }\n`;\n\nconst Input = styled.input.attrs({ required: true })`\n  background-color: red;\n`;\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Test = function () {\n  const [value, setValue] = useState(\"\");\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setValue(value);\n  };\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log(value);\n  };\n\n  return (\n    <>\n      <Title>Hello</Title>\n      <Box>\n        <Emoji as=\"p\">😂</Emoji>\n      </Box>\n      <div>\n        <Emoji>🔥</Emoji>\n        <Btn as=\"a\" href=\"/\">\n          Log in\n        </Btn>\n        <Input />\n      </div>\n      <Circle bgColor=\"red\" />\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          onChange={onChange}\n          value={value}\n        />\n        <button type=\"submit\">Log in</button>\n      </form>\n    </>\n  );\n};\n\nexport default Test;\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json(),\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`,\n  ).then((response) => response.json());\n}\n","import ReactApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nconst Chart = function ({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    },\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ReactApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","const Price = function () {\n  return <h1>Price</h1>;\n};\n\nexport default Price;\n","import { fetchCoinInfo, fetchCoinTickers } from \"api\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nconst Coin = function () {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  // Object.keys(info).join()\n  // Object.values(info).map(v => typeof v).join() 타입스크립트 타입 추출\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId),\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    },\n  );\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path=\"/:coinId/price\">\n              <Price />\n            </Route>\n            <Route path=\"/:coinId/chart\">\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Coin;\n","import { fetchCoins } from \"api\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};}\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  isNew: boolean;\n  isActive: boolean;\n  type: string;\n}\n\nconst Coins = function () {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n};\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Test from \"routes/Test\";\nimport Coin from \"routes/Coin\";\nimport Coins from \"routes/Coins\";\n\nconst Router = function () {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/test\">\n          <Test />\n        </Route>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\nexport default Router;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport Router from \"Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};  \n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  margin: 0;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst App = function () {\n  return (\n    <Wrapper as=\"header\">\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n  btnColor: \"tomato\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#131313\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  btnColor: \"teal\",\n};\n"],"sourceRoot":""}